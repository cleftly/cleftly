[package]
name = "app"
version = "0.1.1"
description = "A Tauri App"
authors = ["wxllow"]
license = "MIT"
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2", features = ["devtools"] }
tauri-plugin-persisted-scope = { version = "2" }
percent-encoding = "2.3.0"
mime_guess = "2.0.4"
rodio = { version = "0.20.1", features = ["symphonia-aac", "symphonia-isomp4"] }
rand = "0.8.5"
declarative-discord-rich-presence = { git = "https://github.com/wxllow/declarative-discord-rich-presence" }
regex = "1.10.3"
md5 = "0.7.0"
which = "7.0.0"
tauri-plugin-log = { version = "2" }
log = { version = "0.4.20", features = ["release_max_level_info"] }
time = { version = "0.3.34", features = ["serde"] }
lofty = "0.18.2"
tauri-plugin-dialog = "2"
tauri-plugin-os = "2"
tauri-plugin-http = { version = "2", features = ["unsafe-headers"] }
tauri-plugin-fs = "2"
tauri-plugin-shell = "2"
tauri-plugin-process = "2"
http = "1.1.0"
http-range = "0.1.5"

[target.'cfg(target_os = "macos")'.dependencies]
objc = "0.2.7"
cocoa = "0.26.0"

[target.'cfg(target_os = "linux")'.dependencies]
dbus = "0.9.7"

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
tauri-plugin-updater = "2"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
strip = true
